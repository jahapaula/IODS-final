{
    "collab_server" : "",
    "contents" : "# https://druedin.com/2015/07/14/overcoming-warnings-when-importing-spss-files-to-r/\nlibrary(foreign)\nlibrary(dplyr)\n\nss2016 <- read.spss(\"15618_SuomiSyö_2016.sav\", to.data.frame=TRUE, use.value.labels = T)#, reencode = \"macintosh\") piti tehdä jotain mutta eipä toimi\n\n# saving variable names to a diff dataset just to make it easier to check at them\n# encoding doesn't work\ndataset.labels <- as.data.frame(attr(ss2016, \"variable.labels\"), encoding=\"macintosh\")\nstr(dataset.labels)\n#value.labels(ss2016) <- gsub(\"\\344\", \"ä\", value.labels(ss2016))\n\n#library(stringr)\n#ss2016 <- str_replace(ss2016, pattern=\"<e4>\", replace =\"ä\")\n#keep <- c(\"k17.5\", \"k67_12\", \"k67_15\", \"k67_16\", \"suuralue\", \"supu\", \"ika\") \n#ss2016-sub <- select(ss2016, one_of(keep))\n\nss2016.sub <- dplyr::select(ss2016, k17.5, k67_12, k67_15, k67_16, suuralue, supu, ika, starts_with(\"k1.\"), starts_with(\"k18a_\"), starts_with(\"k63.\"), starts_with(\"k51.\"))\n#dataset.labels <- dplyr::selectrows(dataset.labels, k17.5, k67_12, k67_15, k67_16, suuralue, supu, ika, starts_with(\"k18a_\"), starts_with(\"k63.\"), starts_with(\"k51.\"))\n\n#levels(ss2016.sub) <- gsub(\"\\344\", \"a\", levels(ss2016.sub))\n#ss2016.sub$ <- gsub(\"\\344\", \"a\", ss2016-sub$)\n\n#ss2016.sub <- apply(ss2016.sub, 2, function(x) { \n#  gsub(\"<e4>'\", \"ä\", x)\n#})\n\n#transforming ruokavalio questions to binary variables\n#ss16.sub$k67.comb <- with(ss16.sub,interaction(k67_12, k67_15, k67_16))\nss2016.sub <- mutate(ss2016.sub, lihaton = k67_12 == 12, kasvis = k67_15 == 15, vegaani = k67_16 == 16)\nss2016.sub <- dplyr::select(ss2016.sub, -k67_12, -k67_15, -k67_16)\n\nwrite.csv(ss2016.sub, \"ss2016sub.csv\")\n\n#The Jungerian excursion, that is, went elsewhere to remove all ääkköset grrr\nss16 <- read.table(\"ss2016sub-ao.csv\", sep=\",\", header = TRUE, row.names = 1 )\n\n# dataset with attitude factors plus demo\nss16.atti <- dplyr::select(ss16, suuralue, supu, ika, kasvis, lihaton, vegaani, starts_with(\"k1.\"))\n# dataset with attitude factors only\nss16.att <- dplyr::select(ss16, starts_with(\"k1.\"))\n# dataset with viisi tärkeintä ominaisuutta ruoalla\nss16.attr <- dplyr::select(ss16, suuralue, supu, ika, kasvis, lihaton, vegaani, starts_with(\"k18a\"))\n# dataset with vastuullisuuskysymykset + demo\nss16.resp <- dplyr::select(ss16, suuralue, supu, ika, kasvis, lihaton, vegaani, starts_with(\"k51.\"))\n# dataset with vastuullisuuskysymykset\nss16.res <- dplyr::select(ss16, starts_with(\"k51.\"))\n# dataset with terveellisyyskysymykset + demo\nss16.heal <- dplyr::select(ss16, suuralue, supu, ika, kasvis, lihaton, vegaani, starts_with(\"k63.\"))\n# dataset with terveellisyyskysymykset no demo\nss16.hea <- dplyr::select(ss16, starts_with(\"k63.\"))\n\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(GGally)\nlibrary(stringr)\nlibrary(tidyr)\n\n\n\n\n### PCA for food attributes questions\n\n# transform all factors to numeric\nfor(i in c(1:ncol(ss16.att))) {\n  ss16.att[,i] <- as.numeric(ss16.att[,i])\n}\n\n# deal with missing values here!!\n# print out a completeness indicator of the data\ncomplete.cases(ss16.att)\n\n# print out the data along with a completeness indicator as the last column\ndata.frame(ss16.att[-1], comp = complete.cases(ss16.att))\n\n# filter out all rows with NA values\nss16.att_ <- filter(ss16.att, complete.cases(ss16.att))\n\n# standardize the variables\nss16.att_std <- scale(ss16.att_)\n\n# perform principal component analysis (with the SVD method)\npca_1 <- prcomp(ss16.att_std)\nsummary(pca_1)\n\n# draw a biplot of the principal component representation and the original variables\nbiplot(pca_1, choices = 1:2, cex = c(0.7, 1), col = c(\"grey40\", \"deeppink2\"), main = \" \", sub = \"Figure 1\")\n#fig.cap = \"caption\"\n\n\n\n\n### same stuff for responsibility questions\n\n# transform all factors to numeric\nfor(i in c(1:ncol(ss16.res))) {\n  ss16.res[,i] <- as.numeric(ss16.res[,i])\n}\n\n# deal with missing values here!!\n# print out a completeness indicator of the data\ncomplete.cases(ss16.res)\n\n# print out the data along with a completeness indicator as the last column\ndata.frame(ss16.res[-1], comp = complete.cases(ss16.res))\n\n# filter out all rows with NA values\nss16.res_ <- filter(ss16.res, complete.cases(ss16.res))\n\n# standardize the variables\nss16.res_std <- scale(ss16.res_)\n\n# perform principal component analysis (with the SVD method)\npca_2 <- prcomp(ss16.res_std)\nsummary(pca_2)\n\n# draw a biplot of the principal component representation and the original variables\nbiplot(pca_2, choices = 1:2, cex = c(0.7, 1), col = c(\"grey40\", \"deeppink2\"), main = \" \", sub = \"Figure 1\")\n#fig.cap = \"caption\"\n\n\n### Trying out an MCA with the food attribute variables\n\nlibrary(FactoMineR)\n\n# removing some un-interesting variables\ntea_time2 <- dplyr::select(tea_time, -price, -How)\n\n# multiple correspondence analysis\nmca_sub <- MCA(ss16.attr, graph = F,  na.method=\"NA\")\n\n# summary of the model\nsummary(mca_sub)\ndimdesc(mca_sub)\n\n# visualize MCA\nplot(mca_sub, invisible=c(\"ind\"), habillage = \"quali\")\n# plot(mca, invisible=c(\"ind\",\"var\"))",
    "created" : 1488727080838.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1490392997",
    "id" : "2251BD9A",
    "lastKnownWriteTime" : 1488905551,
    "last_content_update" : 1488905551704,
    "path" : "~/IODS-project/fineats/ss-wrangling.R",
    "project_path" : "ss-wrangling.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}